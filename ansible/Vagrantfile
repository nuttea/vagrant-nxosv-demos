# -*- mode: ruby -*-
# vi: set ft=ruby :

nxos_box_name = "nxosv/7-0-3-i5-2"

Vagrant.configure(2) do |config|
  config.vm.define "master" do |master|
    master.vm.box = "centos/7"
    if Vagrant.has_plugin?("vagrant-cachier")
      # Configure cached packages to be shared between instances of the same base box.
      # More info on http://fgrehm.viewdocs.io/vagrant-cachier/usage
      config.cache.scope = :box
    end

    master.vm.synced_folder "./ansible", "/root/vagrant-nxosv-demos/ansible"

    master.vm.provider "virtualbox" do |vb|
      #   # Display the VirtualBox GUI when booting the machine
      #   vb.gui = true
      #
      #   # Customize the amount of memory on the VM:
        vb.memory = "1024"
    end

    master.vm.network "private_network", ip: "192.168.1.254", virtualbox__intnet: "nxosv_network1"


    master.vm.provision "shell", privileged: false, inline: <<-SHELL
      echo "proxy=http://173.39.121.40:80" >> /etc/yum.conf
      yum install -y ansible
    SHELL

  end


  config.vm.define "n9kv1" do |n9kv1|
        n9kv1.vm.box = nxos_box_name

        if Vagrant.has_plugin?("vagrant-cachier")
          config.cache.disable!
        end

        n9kv1.ssh.insert_key = false
        n9kv1.vm.boot_timeout = 420
        n9kv1.vm.synced_folder '.', '/vagrant', disabled: true
        n9kv1.vm.network "forwarded_port", guest: 80, host: 8080, auto_correct: true
        n9kv1.vm.network "private_network", ip: "192.168.1.2", auto_config: false, virtualbox__intnet: "nxosv_network1"
        n9kv1.vm.network "private_network", auto_config: false, virtualbox__intnet: "nxosv_network2"
        n9kv1.vm.network "private_network", auto_config: false, virtualbox__intnet: "nxosv_network3"
        n9kv1.vm.network "private_network", auto_config: false, virtualbox__intnet: "nxosv_network4"
        n9kv1.vm.network "private_network", auto_config: false, virtualbox__intnet: "nxosv_network5"
        n9kv1.vm.network "private_network", auto_config: false, virtualbox__intnet: "nxosv_network6"
        n9kv1.vm.network "private_network", auto_config: false, virtualbox__intnet: "nxosv_network7"
        n9kv1.vm.provider :virtualbox do |vb|
                vb.customize ['modifyvm',:id,'--nicpromisc2','allow-all']
                vb.customize ['modifyvm',:id,'--nicpromisc3','allow-all']
                vb.customize ['modifyvm',:id,'--nicpromisc4','allow-all']
                vb.customize ['modifyvm',:id,'--nicpromisc5','allow-all']
                vb.customize ['modifyvm',:id,'--nicpromisc6','allow-all']
                vb.customize ['modifyvm',:id,'--nicpromisc7','allow-all']
                vb.customize ['modifyvm',:id,'--nicpromisc8','allow-all']

                vb.customize "pre-boot", [
                        "storageattach", :id,
                        "--storagectl", "SATA",
                        "--port", "1",
                        "--device", "0",
                        "--type", "dvddrive",
                        "--medium", "./nxosv_config.iso",
                ]
        end
        n9kv1.vm.provision "shell", privileged: true, inline: <<-SHELL
          sleep 30 #otherwise the interfaces might not be ready for configuration

          # Configure Eth1/1 with unique MAC and IP

          echo -e 'hostname n9kv1\nfeature nxapi\nvrf context management\n ip route 0.0.0.0/0 10.0.2.3\ndefault interface Ethernet1/1\ninterface Ethernet1/1\n no shutdown\n no switchport\n\n mac-address 1.1.1\ninterface Ethernet1/7\n no switchport\n mac-address 1.1.1\n'> /tmp/mac-cfg
          sudo vsh -r /tmp/mac-cfg
          sudo ip add add 192.168.1.1/24 dev Eth1-1

          echo "192.168.1.254    master">>/etc/hosts
          sudo bash -c  'echo "nameserver 10.0.2.3" > /etc/resolv.conf'
          sudo vsh -c 'copy running-config startup-config'

          echo -e '\n\n----------------\n\nProvisioning complete\n'

        SHELL
  end

  config.vm.define "n9kv2" do |n9kv2|
        n9kv2.vm.box = nxos_box_name

        if Vagrant.has_plugin?("vagrant-cachier")
          config.cache.disable!
        end

        n9kv2.ssh.insert_key = false
        n9kv2.vm.boot_timeout = 420
        n9kv2.vm.synced_folder '.', '/vagrant', disabled: true
        n9kv2.vm.network "forwarded_port", guest: 80, host: 8081, auto_correct: true
        n9kv2.vm.network "private_network", ip: "192.168.1.3", auto_config: false, virtualbox__intnet: "nxosv_network1"
        n9kv2.vm.network "private_network", auto_config: false, virtualbox__intnet: "nxosv_network2"
        n9kv2.vm.network "private_network", auto_config: false, virtualbox__intnet: "nxosv_network3"
        n9kv2.vm.network "private_network", auto_config: false, virtualbox__intnet: "nxosv_network4"
        n9kv2.vm.network "private_network", auto_config: false, virtualbox__intnet: "nxosv_network5"
        n9kv2.vm.network "private_network", auto_config: false, virtualbox__intnet: "nxosv_network6"
        n9kv2.vm.network "private_network", auto_config: false, virtualbox__intnet: "nxosv_network7"
        n9kv2.vm.provider :virtualbox do |vb|
                vb.customize ["modifyvm",:id,"--nicpromisc2","allow-all"]
                vb.customize ['modifyvm',:id,'--nicpromisc3','allow-all']
                vb.customize ['modifyvm',:id,'--nicpromisc4','allow-all']
                vb.customize ['modifyvm',:id,'--nicpromisc5','allow-all']
                vb.customize ['modifyvm',:id,'--nicpromisc6','allow-all']
                vb.customize ['modifyvm',:id,'--nicpromisc7','allow-all']
                vb.customize ['modifyvm',:id,'--nicpromisc8','allow-all']

                vb.customize "pre-boot", [
                        "storageattach", :id,
                        "--storagectl", "SATA",
                        "--port", "1",
                        "--device", "0",
                        "--type", "dvddrive",
                        "--medium", "./nxosv_config.iso",
                ]
        end
        n9kv2.vm.provision "shell", privileged: true, inline: <<-SHELL
          sleep 30 #otherwise the interfaces might not be ready for configuration

          # Configure Eth1/1 with unique MAC and IP

          echo -e 'hostname n9kv2\nfeature nxapi\nvrf context management\n ip route 0.0.0.0/0 10.0.2.3\ndefault interface Ethernet1/1\ninterface Ethernet1/1\n no shutdown\n no switchport\n\n mac-address 1.1.2\ninterface Ethernet1/7\n no switchport\n mac-address 1.1.2\n'> /tmp/mac-cfg
          sudo vsh -r /tmp/mac-cfg
          sudo ip add add 192.168.1.2/24 dev Eth1-1

          echo "192.168.1.254    master">>/etc/hosts
          sudo bash -c  'echo "nameserver 10.0.2.3" > /etc/resolv.conf'
          sudo vsh -c 'copy running-config startup-config'

          echo -e '\n\n----------------\n\nProvisioning complete, next connect to the master instance ("vagrant ssh master") and run the Ansible playbook ("ansible-playbook -i ansible/hosts ansible/site.yml")\n'

        SHELL
  end
end
